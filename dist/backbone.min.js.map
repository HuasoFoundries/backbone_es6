{"version":3,"file":"backbone.min.js","sources":["../src/backbone_modules/core.js","../src/backbone_modules/events.js","../src/backbone_modules/model.js","../src/backbone_modules/collection.js","../src/backbone_modules/view.js","../src/backbone_modules/router.js","../src/backbone_modules/history.js","../src/backbone_es6.js"],"sourcesContent":["//     Backbone.js 1.3.3\n\n//     (c) 2010-2016 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n//     Backbone may be freely distributed under the MIT license.\n//     For all details and documentation:\n//     http://backbonejs.org\nimport $ from 'jquery';\nimport _ from 'underscore';\n\n// Establish the root object, `window` (`self`) in the browser, or `global` on the server.\n// We use `self` instead of `window` for `WebWorker` support.\nvar root = (typeof self === 'object' && self.self === self && self) ||\n  (typeof global === 'object' && global.global === global && global);\n\n// Initial Setup\n// -------------\nvar previousBackbone = root.Backbone;\n\n// Create a local reference to a common array method we'll want to use later.\nvar slice = Array.prototype.slice;\n\n// Current version of the library. Keep in sync with `package.json`.\nvar Backbone = {\n  VERSION: '1.3.3-es6'\n};\n\n// For Backbone's purposes, jQuery, Zepto, Ender, or My Library (kidding) owns\n// the `$` variable.\nBackbone.$ = $;\n\n// Runs Backbone.js in *noConflict* mode, returning the `Backbone` variable\n// to its previous owner. Returns a reference to this Backbone object.\nBackbone.noConflict = function () {\n  root.Backbone = previousBackbone;\n  return this;\n};\nvar modelMatcher = function (attrs) {\n  var matcher = _.matches(attrs);\n  return function (model) {\n    return matcher(model.attributes);\n  };\n};\n\n// Throw an error when a URL is needed, and none is supplied.\nvar urlError = function () {\n  throw new Error('A \"url\" property or function must be specified');\n};\n\n// Wrap an optional error callback with a fallback error event.\nvar wrapError = function (model, options) {\n  var error = options.error;\n  options.error = function (resp) {\n    if (error) {\n      error.call(options.context, model, resp, options);\n    }\n    model.trigger('error', model, resp, options);\n  };\n};\n\n// Support `collection.sortBy('attr')` and `collection.findWhere({id: 1})`.\nvar cb = function (iteratee, instance) {\n  if (_.isFunction(iteratee)) {\n    return iteratee;\n  }\n  if (_.isObject(iteratee) && !instance._isModel(iteratee)) {\n    return modelMatcher(\n      iteratee);\n  }\n  if (_.isString(iteratee)) {\n    return function (model) {\n      return model.get(iteratee);\n    };\n  }\n  return iteratee;\n};\n// Proxy Backbone class methods to Underscore functions, wrapping the model's\n// `attributes` object or collection's `models` array behind the scenes.\n//\n// collection.filter(function(model) { return model.get('age') > 10 });\n// collection.each(this.addView);\n//\n// `Function#apply` can be slow so we use the method's arg count, if we know it.\nvar addMethod = function (length, method, attribute) {\n  switch (length) {\n  case 1:\n    return function () {\n      return _[method](this[attribute]);\n    };\n  case 2:\n    return function (value) {\n      return _[method](this[attribute], value);\n    };\n  case 3:\n    return function (iteratee, context) {\n      return _[method](this[attribute], cb(iteratee, this),\n        context);\n    };\n  case 4:\n    return function (iteratee, defaultVal, context) {\n      return _[method](this[attribute], cb(iteratee, this),\n        defaultVal, context);\n    };\n  default:\n    return function () {\n      var args = slice.call(arguments);\n      args.unshift(this[attribute]);\n      return _[method].apply(_, args);\n    };\n  }\n};\nvar addUnderscoreMethods = function (Class, methods, attribute) {\n  _.each(methods, function (length, method) {\n    if (_[method]) {\n      Class.prototype[method] = addMethod(\n        length,\n        method, attribute);\n    }\n  });\n};\n\n// Turn on `emulateHTTP` to support legacy HTTP servers. Setting this option\n// will fake `\"PATCH\"`, `\"PUT\"` and `\"DELETE\"` requests via the `_method` parameter and\n// set a `X-Http-Method-Override` header.\nBackbone.emulateHTTP = false;\n\n// Turn on `emulateJSON` to support legacy servers that can't deal with direct\n// `application/json` requests ... this will encode the body as\n// `application/x-www-form-urlencoded` instead and will send the model in a\n// form param named `model`.\nBackbone.emulateJSON = false;\n\n// Map from CRUD to HTTP for our default `Backbone.sync` implementation.\nvar methodMap = {\n  'create': 'POST',\n  'update': 'PUT',\n  'patch': 'PATCH',\n  'delete': 'DELETE',\n  'read': 'GET'\n};\n// Backbone.sync\n// -------------\n\n// Override this function to change the manner in which Backbone persists\n// models to the server. You will be passed the type of request, and the\n// model in question. By default, makes a RESTful Ajax request\n// to the model's `url()`. Some possible customizations could be:\n//\n// * Use `setTimeout` to batch rapid-fire updates into a single request.\n// * Send up the models as XML instead of JSON.\n// * Persist models via WebSockets instead of Ajax.\n//\n// Turn on `Backbone.emulateHTTP` in order to send `PUT` and `DELETE` requests\n// as `POST`, with a `_method` parameter containing the true HTTP method,\n// as well as all requests with the body as `application/x-www-form-urlencoded`\n// instead of `application/json` with the model in a param named `model`.\n// Useful when interfacing with server-side languages like **PHP** that make\n// it difficult to read the body of `PUT` requests.\nBackbone.sync = function (method, model, options) {\n  var type = methodMap[method];\n\n  // Default options, unless specified.\n  _.defaults(options || (options = {}), {\n    emulateHTTP: Backbone.emulateHTTP,\n    emulateJSON: Backbone.emulateJSON\n  });\n\n  // Default JSON-request options.\n  var params = {\n    type: type,\n    dataType: 'json'\n  };\n\n  // Ensure that we have a URL.\n  if (!options.url) {\n    params.url = _.result(model, 'url') || urlError();\n  }\n\n  // Ensure that we have the appropriate request data.\n  if (options.data == null && model && (method === 'create' || method ===\n      'update' || method === 'patch')) {\n    params.contentType = 'application/json';\n    params.data = JSON.stringify(options.attrs || model.toJSON(\n      options));\n  }\n\n  // For older servers, emulate JSON by encoding the request into an HTML-form.\n  if (options.emulateJSON) {\n    params.contentType = 'application/x-www-form-urlencoded';\n    params.data = params.data ? {\n      model: params.data\n    } : {};\n  }\n\n  // For older servers, emulate HTTP by mimicking the HTTP method with `_method`\n  // And an `X-HTTP-Method-Override` header.\n  if (options.emulateHTTP && (type === 'PUT' || type === 'DELETE' ||\n      type ===\n      'PATCH')) {\n    params.type = 'POST';\n    if (options.emulateJSON) {\n      params.data._method = type;\n    }\n    var beforeSend = options.beforeSend;\n    options.beforeSend = function (xhr) {\n      xhr.setRequestHeader('X-HTTP-Method-Override', type);\n      if (beforeSend) {\n        return beforeSend.apply(this, arguments);\n      }\n    };\n  }\n\n  // Don't process data on a non-GET request.\n  if (params.type !== 'GET' && !options.emulateJSON) {\n    params.processData = false;\n  }\n\n  // Pass along `textStatus` and `errorThrown` from jQuery.\n  var error = options.error;\n  options.error = function (xhr, textStatus, errorThrown) {\n    options.textStatus = textStatus;\n    options.errorThrown = errorThrown;\n    if (error) {\n      error.call(options.context, xhr, textStatus,\n        errorThrown);\n    }\n  };\n\n  // Make the request, allowing the user to override any Ajax options.\n  var xhr = options.xhr = Backbone.ajax(_.extend(params, options));\n  model.trigger('request', model, xhr, options);\n  return xhr;\n};\n\n// Set the default implementation of `Backbone.ajax` to proxy through to `$`.\n// Override this if you'd like to use a different library.\nBackbone.ajax = function () {\n  return Backbone.$.ajax.apply(Backbone.$, arguments);\n};\n\nexport {\n  urlError,\n  wrapError,\n  addUnderscoreMethods,\n  Backbone\n};\n","import $ from 'jquery';\nimport _ from 'underscore';\nimport {\n  Backbone\n} from './core.js';\n\n// Backbone.Events\n// ---------------\n\n// A module that can be mixed in to *any object* in order to provide it with\n// a custom event channel. You may bind a callback to an event with `on` or\n// remove with `off`; `trigger`-ing an event fires all callbacks in\n// succession.\n//\n//     var object = {};\n//     _.extend(object, Backbone.Events);\n//     object.on('expand', function(){ alert('expanded'); });\n//     object.trigger('expand');\n//\nvar Events = Backbone.Events = {};\n\n// Regular expression used to split event strings.\nvar eventSplitter = /\\s+/;\n\n// Iterates over the standard `event, callback` (as well as the fancy multiple\n// space-separated events `\"change blur\", callback` and jQuery-style event\n// maps `{event: callback}`).\nvar eventsApi = function (iteratee, events, name, callback, opts) {\n  var i = 0,\n    names;\n  if (name && typeof name === 'object') {\n    // Handle event maps.\n    if (callback !== void 0 && 'context' in opts && opts.context === void 0) {\n      opts.context = callback;\n    }\n    for (names = _.keys(name); i < names.length; i++) {\n      events = eventsApi(iteratee, events, names[i], name[names[i]],\n        opts);\n    }\n  } else if (name && eventSplitter.test(name)) {\n    // Handle space-separated event names by delegating them individually.\n    for (names = name.split(eventSplitter); i < names.length; i++) {\n      events = iteratee(events, names[i], callback, opts);\n    }\n  } else {\n    // Finally, standard events.\n    events = iteratee(events, name, callback, opts);\n  }\n  return events;\n};\n\n// The reducing API that adds a callback to the `events` object.\nvar onApi = function (events, name, callback, options) {\n  if (callback) {\n    var handlers = events[name] || (events[name] = []);\n    var context = options.context,\n      ctx = options.ctx,\n      listening = options.listening;\n    if (listening) {\n      listening.count++;\n    }\n\n    handlers.push({\n      callback: callback,\n      context: context,\n      ctx: context || ctx,\n      listening: listening\n    });\n  }\n  return events;\n};\n\n// The reducing API that removes a callback from the `events` object.\nvar offApi = function (events, name, callback, options) {\n  if (!events) {\n    return;\n  }\n\n  var i = 0,\n    listening;\n  var context = options.context,\n    listeners = options.listeners;\n\n  // Delete all events listeners and \"drop\" events.\n  if (!name && !callback && !context) {\n    var ids = _.keys(listeners);\n    for (; i < ids.length; i++) {\n      listening = listeners[ids[i]];\n      delete listeners[listening.id];\n      delete listening.listeningTo[listening.objId];\n    }\n    return;\n  }\n\n  var names = name ? [name] : _.keys(events);\n  for (; i < names.length; i++) {\n    name = names[i];\n    var handlers = events[name];\n\n    // Bail out if there are no events stored.\n    if (!handlers) {\n      break;\n    }\n\n    // Replace events if there are any remaining.  Otherwise, clean up.\n    var remaining = [];\n    for (var j = 0; j < handlers.length; j++) {\n      var handler = handlers[j];\n      if (\n        callback && callback !== handler.callback &&\n        callback !== handler.callback._callback ||\n        context && context !== handler.context\n      ) {\n        remaining.push(handler);\n      } else {\n        listening = handler.listening;\n        if (listening && --listening.count === 0) {\n          delete listeners[listening.id];\n          delete listening.listeningTo[listening.objId];\n        }\n      }\n    }\n\n    // Update tail event if the list has any events.  Otherwise, clean up.\n    if (remaining.length) {\n      events[name] = remaining;\n    } else {\n      delete events[name];\n    }\n  }\n  return events;\n};\n\n// Guard the `listening` argument from the public API.\nvar internalOn = function (obj, name, callback, context, listening) {\n  obj._events = eventsApi(onApi, obj._events || {}, name, callback, {\n    context: context,\n    ctx: obj,\n    listening: listening\n  });\n\n  if (listening) {\n    var listeners = obj._listeners || (obj._listeners = {});\n    listeners[listening.id] = listening;\n  }\n\n  return obj;\n};\n\n// Reduces the event callbacks into a map of `{event: onceWrapper}`.\n// `offer` unbinds the `onceWrapper` after it has been called.\nvar onceMap = function (map, name, callback, offer) {\n  if (callback) {\n    var once = map[name] = _.once(function () {\n      offer(name, once);\n      callback.apply(this, arguments);\n    });\n    once._callback = callback;\n  }\n  return map;\n};\n\n// Handles triggering the appropriate event callbacks.\nvar triggerApi = function (objEvents, name, callback, args) {\n  if (objEvents) {\n    var events = objEvents[name];\n    var allEvents = objEvents.all;\n    if (events && allEvents) {\n      allEvents = allEvents.slice();\n    }\n    if (events) {\n      triggerEvents(events, args);\n    }\n    if (allEvents) {\n      triggerEvents(allEvents, [name].concat(args));\n    }\n  }\n  return objEvents;\n};\n\n// A difficult-to-believe, but optimized internal dispatch function for\n// triggering events. Tries to keep the usual cases speedy (most internal\n// Backbone events have 3 arguments).\nvar triggerEvents = function (events, args) {\n  var ev, i = -1,\n    l = events.length,\n    a1 = args[0],\n    a2 = args[1],\n    a3 = args[2];\n  switch (args.length) {\n  case 0:\n    while (++i < l) {\n      (ev = events[i]).callback.call(ev.ctx);\n    }\n    return;\n  case 1:\n    while (++i < l) {\n      (ev = events[i]).callback.call(ev.ctx, a1);\n    }\n    return;\n  case 2:\n    while (++i < l) {\n      (ev = events[i]).callback.call(ev.ctx, a1, a2);\n    }\n    return;\n  case 3:\n    while (++i < l) {\n      (ev = events[i]).callback.call(ev.ctx, a1, a2, a3);\n    }\n    return;\n  default:\n    while (++i < l) {\n      (ev = events[i]).callback.apply(ev.ctx, args);\n    }\n    return;\n  }\n};\n\n// Bind an event to a `callback` function. Passing `\"all\"` will bind\n// the callback to all events fired.\nEvents.on = function (name, callback, context) {\n  return internalOn(this, name, callback, context);\n};\n\n// Inversion-of-control versions of `on`. Tell *this* object to listen to\n// an event in another object... keeping track of what it's listening to\n// for easier unbinding later.\nEvents.listenTo = function (obj, name, callback) {\n  if (!obj) {\n    return this;\n  }\n  var id = obj._listenId || (obj._listenId = _.uniqueId('l'));\n  var listeningTo = this._listeningTo || (this._listeningTo = {});\n  var listening = listeningTo[id];\n\n  // This object is not listening to any other events on `obj` yet.\n  // Setup the necessary references to track the listening callbacks.\n  if (!listening) {\n    var thisId = this._listenId || (this._listenId = _.uniqueId('l'));\n    listening = listeningTo[id] = {\n      obj: obj,\n      objId: id,\n      id: thisId,\n      listeningTo: listeningTo,\n      count: 0\n    };\n  }\n\n  // Bind callbacks on obj, and keep track of them on listening.\n  internalOn(obj, name, callback, this, listening);\n  return this;\n};\n\n// Remove one or many callbacks. If `context` is null, removes all\n// callbacks with that function. If `callback` is null, removes all\n// callbacks for the event. If `name` is null, removes all bound\n// callbacks for all events.\nEvents.off = function (name, callback, context) {\n  if (!this._events) {\n    return this;\n  }\n  this._events = eventsApi(offApi, this._events, name, callback, {\n    context: context,\n    listeners: this._listeners\n  });\n  return this;\n};\n\n// Tell this object to stop listening to either specific events ... or\n// to every object it's currently listening to.\nEvents.stopListening = function (obj, name, callback) {\n  var listeningTo = this._listeningTo;\n  if (!listeningTo) {\n    return this;\n  }\n\n  var ids = obj ? [obj._listenId] : _.keys(listeningTo);\n\n  for (var i = 0; i < ids.length; i++) {\n    var listening = listeningTo[ids[i]];\n\n    // If listening doesn't exist, this object is not currently\n    // listening to obj. Break out early.\n    if (!listening) {\n      break;\n    }\n\n    listening.obj.off(name, callback, this);\n  }\n\n  return this;\n};\n\n// Bind an event to only be triggered a single time. After the first time\n// the callback is invoked, its listener will be removed. If multiple events\n// are passed in using the space-separated syntax, the handler will fire\n// once for each event, not once for a combination of all events.\nEvents.once = function (name, callback, context) {\n  // Map the event into a `{event: once}` object.\n  var events = eventsApi(onceMap, {}, name, callback, _.bind(this.off,\n    this));\n  if (typeof name === 'string' && context == null) {\n    callback = void 0;\n  }\n  return this.on(events, callback, context);\n};\n\n// Inversion-of-control versions of `once`.\nEvents.listenToOnce = function (obj, name, callback) {\n  // Map the event into a `{event: once}` object.\n  var events = eventsApi(onceMap, {}, name, callback, _.bind(this.stopListening,\n    this, obj));\n  return this.listenTo(obj, events);\n};\n\n// Trigger one or many events, firing all bound callbacks. Callbacks are\n// passed the same arguments as `trigger` is, apart from the event name\n// (unless you're listening on `\"all\"`, which will cause your callback to\n// receive the true name of the event as the first argument).\nEvents.trigger = function (name) {\n  if (!this._events) {\n    return this;\n  }\n\n  var length = Math.max(0, arguments.length - 1);\n  var args = Array(length);\n  for (var i = 0; i < length; i++) {\n    args[i] = arguments[i + 1];\n  }\n\n  eventsApi(triggerApi, this._events, name, void 0, args);\n  return this;\n};\n\n// Aliases for backwards compatibility.\nEvents.bind = Events.on;\nEvents.unbind = Events.off;\n\nexport {\n  Events\n};\n","import $ from 'jquery';\nimport _ from 'underscore';\nimport {\n  Backbone,\n  urlError,\n  wrapError,\n  addUnderscoreMethods\n} from './core.js';\nimport {\n  Events\n} from './events.js';\n\n// Backbone.Model\n// --------------\n\n// Backbone **Models** are the basic data object in the framework --\n// frequently representing a row in a table in a database on your server.\n// A discrete chunk of data and a bunch of useful, related methods for\n// performing computations and transformations on that data.\n\n// Create a new model with the specified attributes. A client id (`cid`)\n// is automatically generated and assigned for you.\nvar Model = function (attributes, options) {\n  var attrs = attributes || {};\n  options = options || {};\n  this.preinitialize.apply(this, arguments);\n  this.cid = _.uniqueId(this.cidPrefix);\n  this.attributes = {};\n  if (options.collection) {\n    this.collection = options.collection;\n  }\n  if (options.parse) {\n    attrs = this.parse(attrs, options) || {};\n  }\n  var defaults = _.result(this, 'defaults');\n  attrs = _.defaults(_.extend({}, defaults, attrs), defaults);\n  this.set(attrs, options);\n  this.changed = {};\n  this.initialize.apply(this, arguments);\n};\n\n// Attach all inheritable methods to the Model prototype.\n_.extend(Model.prototype, Events, {\n\n  // A hash of attributes whose current and previous value differ.\n  changed: null,\n\n  // The value returned during the last failed validation.\n  validationError: null,\n\n  // The default name for the JSON `id` attribute is `\"id\"`. MongoDB and\n  // CouchDB users may want to set this to `\"_id\"`.\n  idAttribute: 'id',\n\n  // The prefix is used to create the client id which is used to identify models locally.\n  // You may want to override this if you're experiencing name clashes with model ids.\n  cidPrefix: 'c',\n\n  // preinitialize is an empty function by default. You can override it with a function\n  // or object.  preinitialize will run before any instantiation logic is run in the Model.\n  preinitialize: function () {},\n\n  // Initialize is an empty function by default. Override it with your own\n  // initialization logic.\n  initialize: function () {},\n\n  // Return a copy of the model's `attributes` object.\n  toJSON: function (options) {\n    return _.clone(this.attributes);\n  },\n\n  // Proxy `Backbone.sync` by default -- but override this if you need\n  // custom syncing semantics for *this* particular model.\n  sync: function () {\n    return Backbone.sync.apply(this, arguments);\n  },\n\n  // Get the value of an attribute.\n  get: function (attr) {\n    return this.attributes[attr];\n  },\n\n  // Get the HTML-escaped value of an attribute.\n  escape: function (attr) {\n    return _.escape(this.get(attr));\n  },\n\n  // Returns `true` if the attribute contains a value that is not null\n  // or undefined.\n  has: function (attr) {\n    return this.get(attr) != null;\n  },\n\n  // Special-cased proxy to underscore's `_.matches` method.\n  matches: function (attrs) {\n    return !!_.iteratee(attrs, this)(this.attributes);\n  },\n\n  // Set a hash of model attributes on the object, firing `\"change\"`. This is\n  // the core primitive operation of a model, updating the data and notifying\n  // anyone who needs to know about the change in state. The heart of the beast.\n  set: function (key, val, options) {\n    if (key == null) {\n      return this;\n    }\n\n    // Handle both `\"key\", value` and `{key: value}` -style arguments.\n    var attrs;\n    if (typeof key === 'object') {\n      attrs = key;\n      options = val;\n    } else {\n      (attrs = {})[key] = val;\n    }\n\n    options = options || {};\n\n    // Run validation.\n    if (!this._validate(attrs, options)) {\n      return false;\n    }\n\n    // Extract attributes and options.\n    var unset = options.unset;\n    var silent = options.silent;\n    var changes = [];\n    var changing = this._changing;\n    this._changing = true;\n\n    if (!changing) {\n      this._previousAttributes = _.clone(this.attributes);\n      this.changed = {};\n    }\n\n    var current = this.attributes;\n    var changed = this.changed;\n    var prev = this._previousAttributes;\n\n    // For each `set` attribute, update or delete the current value.\n    for (var attr in attrs) {\n      val = attrs[attr];\n      if (!_.isEqual(current[attr], val)) changes.push(attr);\n      if (!_.isEqual(prev[attr], val)) {\n        changed[attr] = val;\n      } else {\n        delete changed[attr];\n      }\n      unset ? delete current[attr] : current[attr] = val;\n    }\n\n    // Update the `id`.\n    if (this.idAttribute in attrs) {\n      this.id = this.get(this.idAttribute);\n    }\n\n    // Trigger all relevant attribute changes.\n    if (!silent) {\n      if (changes.length) {\n        this._pending = options;\n      }\n      for (var i = 0; i < changes.length; i++) {\n        this.trigger('change:' + changes[i], this, current[\n            changes[i]],\n          options);\n      }\n    }\n\n    // You might be wondering why there's a `while` loop here. Changes can\n    // be recursively nested within `\"change\"` events.\n    if (changing) {\n      return this;\n    }\n    if (!silent) {\n      while (this._pending) {\n        options = this._pending;\n        this._pending = false;\n        this.trigger('change', this, options);\n      }\n    }\n    this._pending = false;\n    this._changing = false;\n    return this;\n  },\n\n  // Remove an attribute from the model, firing `\"change\"`. `unset` is a noop\n  // if the attribute doesn't exist.\n  unset: function (attr, options) {\n    return this.set(attr, void 0, _.extend({}, options, {\n      unset: true\n    }));\n  },\n\n  // Clear all attributes on the model, firing `\"change\"`.\n  clear: function (options) {\n    var attrs = {};\n    for (var key in this.attributes) attrs[key] = void 0;\n    return this.set(attrs, _.extend({}, options, {\n      unset: true\n    }));\n  },\n\n  // Determine if the model has changed since the last `\"change\"` event.\n  // If you specify an attribute name, determine if that attribute has changed.\n  hasChanged: function (attr) {\n    if (attr == null) {\n      return !_.isEmpty(this.changed);\n    }\n    return _.has(this.changed, attr);\n  },\n\n  // Return an object containing all the attributes that have changed, or\n  // false if there are no changed attributes. Useful for determining what\n  // parts of a view need to be updated and/or what attributes need to be\n  // persisted to the server. Unset attributes will be set to undefined.\n  // You can also pass an attributes object to diff against the model,\n  // determining if there *would be* a change.\n  changedAttributes: function (diff) {\n    if (!diff) {\n      return this.hasChanged() ? _.clone(this.changed) :\n        false;\n    }\n    var old = this._changing ? this._previousAttributes : this.attributes;\n    var changed = {};\n    var hasChanged;\n    for (var attr in diff) {\n      var val = diff[attr];\n      if (_.isEqual(old[attr], val)) continue;\n      changed[attr] = val;\n      hasChanged = true;\n    }\n    return hasChanged ? changed : false;\n  },\n\n  // Get the previous value of an attribute, recorded at the time the last\n  // `\"change\"` event was fired.\n  previous: function (attr) {\n    if (attr == null || !this._previousAttributes) {\n      return null;\n    }\n    return this._previousAttributes[attr];\n  },\n\n  // Get all of the attributes of the model at the time of the previous\n  // `\"change\"` event.\n  previousAttributes: function () {\n    return _.clone(this._previousAttributes);\n  },\n\n  // Fetch the model from the server, merging the response with the model's\n  // local attributes. Any changed attributes will trigger a \"change\" event.\n  fetch: function (options) {\n    options = _.extend({\n      parse: true\n    }, options);\n    var model = this;\n    var success = options.success;\n    options.success = function (resp) {\n      var serverAttrs = options.parse ? model.parse(resp,\n          options) :\n        resp;\n      if (!model.set(serverAttrs, options)) return false;\n      if (success) {\n        success.call(options.context, model, resp,\n          options);\n      }\n      model.trigger('sync', model, resp, options);\n    };\n    wrapError(this, options);\n    return this.sync('read', this, options);\n  },\n\n  // Set a hash of model attributes, and sync the model to the server.\n  // If the server returns an attributes hash that differs, the model's\n  // state will be `set` again.\n  save: function (key, val, options) {\n    // Handle both `\"key\", value` and `{key: value}` -style arguments.\n    var attrs;\n    if (key == null || typeof key === 'object') {\n      attrs = key;\n      options = val;\n    } else {\n      (attrs = {})[key] = val;\n    }\n\n    options = _.extend({\n      validate: true,\n      parse: true\n    }, options);\n    var wait = options.wait;\n\n    // If we're not waiting and attributes exist, save acts as\n    // `set(attr).save(null, opts)` with validation. Otherwise, check if\n    // the model will be valid when the attributes, if any, are set.\n    if (attrs && !wait) {\n      if (!this.set(attrs, options)) return false;\n    } else if (!this._validate(attrs, options)) {\n      return false;\n    }\n\n    // After a successful server-side save, the client is (optionally)\n    // updated with the server-side state.\n    var model = this;\n    var success = options.success;\n    var attributes = this.attributes;\n    options.success = function (resp) {\n      // Ensure attributes are restored during synchronous saves.\n      model.attributes = attributes;\n      var serverAttrs = options.parse ? model.parse(resp,\n          options) :\n        resp;\n      if (wait) {\n        serverAttrs = _.extend({}, attrs, serverAttrs);\n      }\n      if (serverAttrs && !model.set(serverAttrs, options))\n        return false;\n      if (success) {\n        success.call(options.context, model, resp,\n          options);\n      }\n      model.trigger('sync', model, resp, options);\n    };\n    wrapError(this, options);\n\n    // Set temporary attributes if `{wait: true}` to properly find new ids.\n    if (attrs && wait) {\n      this.attributes = _.extend({}, attributes,\n        attrs);\n    }\n\n    var method = this.isNew() ? 'create' : (options.patch ?\n      'patch' :\n      'update');\n    if (method === 'patch' && !options.attrs) {\n      options.attrs =\n        attrs;\n    }\n    var xhr = this.sync(method, this, options);\n\n    // Restore attributes.\n    this.attributes = attributes;\n\n    return xhr;\n  },\n\n  // Destroy this model on the server if it was already persisted.\n  // Optimistically removes the model from its collection, if it has one.\n  // If `wait: true` is passed, waits for the server to respond before removal.\n  destroy: function (options) {\n    options = options ? _.clone(options) : {};\n    var model = this;\n    var success = options.success;\n    var wait = options.wait;\n\n    var destroy = function () {\n      model.stopListening();\n      model.trigger('destroy', model, model.collection, options);\n    };\n\n    options.success = function (resp) {\n      if (wait) {\n        destroy();\n      }\n      if (success) {\n        success.call(options.context, model, resp,\n          options);\n      }\n      if (!model.isNew()) {\n        model.trigger('sync', model, resp,\n          options);\n      }\n    };\n\n    var xhr = false;\n    if (this.isNew()) {\n      _.defer(options.success);\n    } else {\n      wrapError(this, options);\n      xhr = this.sync('delete', this, options);\n    }\n    if (!wait) {\n      destroy();\n    }\n    return xhr;\n  },\n\n  // Default URL for the model's representation on the server -- if you're\n  // using Backbone's restful methods, override this to change the endpoint\n  // that will be called.\n  url: function () {\n    var base =\n      _.result(this, 'urlRoot') ||\n      _.result(this.collection, 'url') ||\n      urlError();\n    if (this.isNew()) return base;\n    var id = this.get(this.idAttribute);\n    return base.replace(/[^\\/]$/, '$&/') + encodeURIComponent(id);\n  },\n\n  // **parse** converts a response into the hash of attributes to be `set` on\n  // the model. The default implementation is just to pass the response along.\n  parse: function (resp, options) {\n    return resp;\n  },\n\n  // Create a new model with identical attributes to this one.\n  clone: function () {\n    return new this.constructor(this.attributes);\n  },\n\n  // A model is new if it has never been saved to the server, and lacks an id.\n  isNew: function () {\n    return !this.has(this.idAttribute);\n  },\n\n  // Check if the model is currently in a valid state.\n  isValid: function (options) {\n    return this._validate({}, _.extend({}, options, {\n      validate: true\n    }));\n  },\n\n  // Run validation against the next complete set of model attributes,\n  // returning `true` if all is well. Otherwise, fire an `\"invalid\"` event.\n  _validate: function (attrs, options) {\n    if (!options.validate || !this.validate) {\n      return true;\n    }\n    attrs = _.extend({}, this.attributes, attrs);\n    var error = this.validationError = this.validate(attrs,\n        options) ||\n      null;\n    if (!error) {\n      return true;\n    }\n    this.trigger('invalid', this, error, _.extend(options, {\n      validationError: error\n    }));\n    return false;\n  }\n\n});\n\n// Underscore methods that we want to implement on the Model, mapped to the\n// number of arguments they take.\nvar modelMethods = {\n  keys: 1,\n  values: 1,\n  pairs: 1,\n  invert: 1,\n  pick: 0,\n  omit: 0,\n  chain: 1,\n  isEmpty: 1\n};\n\n// Mix in each Underscore method as a proxy to `Model#attributes`.\naddUnderscoreMethods(Model, modelMethods, 'attributes');\n\nexport {\n  Model\n};\n","import $ from 'jquery';\nimport _ from 'underscore';\nimport {\n  Backbone,\n  wrapError,\n  addUnderscoreMethods\n} from './core.js';\nimport {\n  Events\n} from './events.js';\nimport {\n  Model\n} from './model.js';\n\n// Create a local reference to a common array method we'll want to use later.\nvar slice = Array.prototype.slice;\n\n// Backbone.Collection\n// -------------------\n\n// If models tend to represent a single row of data, a Backbone Collection is\n// more analogous to a table full of data ... or a small slice or page of that\n// table, or a collection of rows that belong together for a particular reason\n// -- all of the messages in this particular folder, all of the documents\n// belonging to this particular author, and so on. Collections maintain\n// indexes of their models, both in order, and for lookup by `id`.\n\n// Create a new **Collection**, perhaps to contain a specific type of `model`.\n// If a `comparator` is specified, the Collection will maintain\n// its models in sort order, as they're added and removed.\nvar Collection = function (models, options) {\n  options = options || {};\n  this.preinitialize.apply(this, arguments);\n  if (options.model) {\n    this.model = options.model;\n  }\n  if (options.comparator !== void 0) {\n    this.comparator = options.comparator;\n  }\n  this._reset();\n  this.initialize.apply(this, arguments);\n  if (models) {\n    this.reset(models, _.extend({\n      silent: true\n    }, options));\n  }\n};\n\n// Default options for `Collection#set`.\nvar setOptions = {\n  add: true,\n  remove: true,\n  merge: true\n};\nvar addOptions = {\n  add: true,\n  remove: false\n};\n\n// Splices `insert` into `array` at index `at`.\nvar splice = function (array, insert, at) {\n  at = Math.min(Math.max(at, 0), array.length);\n  var tail = Array(array.length - at);\n  var length = insert.length;\n  var i;\n  for (i = 0; i < tail.length; i++) {\n    tail[i] = array[i + at];\n  }\n  for (i = 0; i < length; i++) {\n    array[i + at] = insert[i];\n  }\n  for (i = 0; i < tail.length; i++) {\n    array[i + length + at] = tail[i];\n  }\n};\n\n// Define the Collection's inheritable methods.\n_.extend(Collection.prototype, Events, {\n\n  // The default model for a collection is just a **Backbone.Model**.\n  // This should be overridden in most cases.\n  model: Model,\n\n  // preinitialize is an empty function by default. You can override it with a function\n  // or object.  preinitialize will run before any instantiation logic is run in the Collection.\n  preinitialize: function () {},\n\n  // Initialize is an empty function by default. Override it with your own\n  // initialization logic.\n  initialize: function () {},\n\n  // The JSON representation of a Collection is an array of the\n  // models' attributes.\n  toJSON: function (options) {\n    return this.map(function (model) {\n      return model.toJSON(options);\n    });\n  },\n\n  // Proxy `Backbone.sync` by default.\n  sync: function () {\n    return Backbone.sync.apply(this, arguments);\n  },\n\n  // Add a model, or list of models to the set. `models` may be Backbone\n  // Models or raw JavaScript objects to be converted to Models, or any\n  // combination of the two.\n  add: function (models, options) {\n    return this.set(models, _.extend({\n      merge: false\n    }, options, addOptions));\n  },\n\n  // Remove a model, or a list of models from the set.\n  remove: function (models, options) {\n    options = _.extend({}, options);\n    var singular = !_.isArray(models);\n    models = singular ? [models] : models.slice();\n    var removed = this._removeModels(models, options);\n    if (!options.silent && removed.length) {\n      options.changes = {\n        added: [],\n        merged: [],\n        removed: removed\n      };\n      this.trigger('update', this, options);\n    }\n    return singular ? removed[0] : removed;\n  },\n\n  // Update a collection by `set`-ing a new list of models, adding new ones,\n  // removing models that are no longer present, and merging models that\n  // already exist in the collection, as necessary. Similar to **Model#set**,\n  // the core operation for updating the data contained by the collection.\n  set: function (models, options) {\n    if (models == null) {\n      return;\n    }\n\n    options = _.extend({}, setOptions, options);\n    if (options.parse && !this._isModel(models)) {\n      models = this.parse(models, options) || [];\n    }\n\n    var singular = !_.isArray(models);\n    models = singular ? [models] : models.slice();\n\n    var at = options.at;\n    if (at != null) {\n      at = +at;\n    }\n    if (at > this.length) {\n      at = this.length;\n    }\n    if (at < 0) {\n      at += this.length + 1;\n    }\n\n    var set = [];\n    var toAdd = [];\n    var toMerge = [];\n    var toRemove = [];\n    var modelMap = {};\n\n    var add = options.add;\n    var merge = options.merge;\n    var remove = options.remove;\n\n    var sort = false;\n    var sortable = this.comparator && at == null && options.sort !==\n      false;\n    var sortAttr = _.isString(this.comparator) ? this.comparator :\n      null;\n\n    // Turn bare objects into model references, and prevent invalid models\n    // from being added.\n    var model, i;\n    for (i = 0; i < models.length; i++) {\n      model = models[i];\n\n      // If a duplicate is found, prevent it from being added and\n      // optionally merge it into the existing model.\n      var existing = this.get(model);\n      if (existing) {\n        if (merge && model !== existing) {\n          var attrs = this._isModel(model) ? model.attributes :\n            model;\n          if (options.parse) {\n            attrs = existing.parse(attrs,\n              options);\n          }\n          existing.set(attrs, options);\n          toMerge.push(existing);\n          if (sortable && !sort) {\n            sort = existing.hasChanged(\n              sortAttr);\n          }\n        }\n        if (!modelMap[existing.cid]) {\n          modelMap[existing.cid] = true;\n          set.push(existing);\n        }\n        models[i] = existing;\n\n        // If this is a new, valid model, push it to the `toAdd` list.\n      } else if (add) {\n        model = models[i] = this._prepareModel(model, options);\n        if (model) {\n          toAdd.push(model);\n          this._addReference(model, options);\n          modelMap[model.cid] = true;\n          set.push(model);\n        }\n      }\n    }\n\n    // Remove stale models.\n    if (remove) {\n      for (i = 0; i < this.length; i++) {\n        model = this.models[i];\n        if (!modelMap[model.cid]) {\n          toRemove.push(model);\n        }\n      }\n      if (toRemove.length) {\n        this._removeModels(toRemove, options);\n      }\n    }\n\n    // See if sorting is needed, update `length` and splice in new models.\n    var orderChanged = false;\n    var replace = !sortable && add && remove;\n    if (set.length && replace) {\n      orderChanged = this.length !== set.length || _.some(this.models,\n        function (m, index) {\n          return m !== set[index];\n        });\n      this.models.length = 0;\n      splice(this.models, set, 0);\n      this.length = this.models.length;\n    } else if (toAdd.length) {\n      if (sortable) {\n        sort = true;\n      }\n      splice(this.models, toAdd, at == null ? this.length : at);\n      this.length = this.models.length;\n    }\n\n    // Silently sort the collection if appropriate.\n    if (sort) {\n      this.sort({\n        silent: true\n      });\n    }\n\n    // Unless silenced, it's time to fire all appropriate add/sort/update events.\n    if (!options.silent) {\n      for (i = 0; i < toAdd.length; i++) {\n        if (at != null) {\n          options.index = at + i;\n        }\n        model = toAdd[i];\n        model.trigger('add', model, this, options);\n      }\n      if (sort || orderChanged) {\n        this.trigger('sort', this,\n          options);\n      }\n      if (toAdd.length || toRemove.length || toMerge.length) {\n        options.changes = {\n          added: toAdd,\n          removed: toRemove,\n          merged: toMerge\n        };\n        this.trigger('update', this, options);\n      }\n    }\n\n    // Return the added (or merged) model (or models).\n    return singular ? models[0] : models;\n  },\n\n  // When you have more items than you want to add or remove individually,\n  // you can reset the entire set with a new list of models, without firing\n  // any granular `add` or `remove` events. Fires `reset` when finished.\n  // Useful for bulk operations and optimizations.\n  reset: function (models, options) {\n    options = options ? _.clone(options) : {};\n    for (var i = 0; i < this.models.length; i++) {\n      this._removeReference(this.models[i], options);\n    }\n    options.previousModels = this.models;\n    this._reset();\n    models = this.add(models, _.extend({\n      silent: true\n    }, options));\n    if (!options.silent) {\n      this.trigger('reset', this, options);\n    }\n    return models;\n  },\n\n  // Add a model to the end of the collection.\n  push: function (model, options) {\n    return this.add(model, _.extend({\n      at: this.length\n    }, options));\n  },\n\n  // Remove a model from the end of the collection.\n  pop: function (options) {\n    var model = this.at(this.length - 1);\n    return this.remove(model, options);\n  },\n\n  // Add a model to the beginning of the collection.\n  unshift: function (model, options) {\n    return this.add(model, _.extend({\n      at: 0\n    }, options));\n  },\n\n  // Remove a model from the beginning of the collection.\n  shift: function (options) {\n    var model = this.at(0);\n    return this.remove(model, options);\n  },\n\n  // Slice out a sub-array of models from the collection.\n  slice: function () {\n    return slice.apply(this.models, arguments);\n  },\n\n  // Get a model from the set by id, cid, model object with id or cid\n  // properties, or an attributes object that is transformed through modelId.\n  get: function (obj) {\n    if (obj == null) {\n      return void 0;\n    }\n    return this._byId[obj] ||\n      this._byId[this.modelId(obj.attributes || obj)] ||\n      obj.cid && this._byId[obj.cid];\n  },\n\n  // Returns `true` if the model is in the collection.\n  has: function (obj) {\n    return this.get(obj) != null;\n  },\n\n  // Get the model at the given index.\n  at: function (index) {\n    if (index < 0) {\n      index += this.length;\n    }\n    return this.models[index];\n  },\n\n  // Return models with matching attributes. Useful for simple cases of\n  // `filter`.\n  where: function (attrs, first) {\n    return this[first ? 'find' : 'filter'](attrs);\n  },\n\n  // Return the first model with matching attributes. Useful for simple cases\n  // of `find`.\n  findWhere: function (attrs) {\n    return this.where(attrs, true);\n  },\n\n  // Force the collection to re-sort itself. You don't need to call this under\n  // normal circumstances, as the set will maintain sort order as each item\n  // is added.\n  sort: function (options) {\n    var comparator = this.comparator;\n    if (!comparator) {\n      throw new Error(\n        'Cannot sort a set without a comparator');\n    }\n    options = options || {};\n\n    var length = comparator.length;\n    if (_.isFunction(comparator)) {\n      comparator = _.bind(\n        comparator,\n        this);\n    }\n\n    // Run sort based on type of `comparator`.\n    if (length === 1 || _.isString(comparator)) {\n      this.models = this.sortBy(comparator);\n    } else {\n      this.models.sort(comparator);\n    }\n    if (!options.silent) {\n      this.trigger('sort', this, options);\n    }\n    return this;\n  },\n\n  // Pluck an attribute from each model in the collection.\n  pluck: function (attr) {\n    return this.map(attr + '');\n  },\n\n  // Fetch the default set of models for this collection, resetting the\n  // collection when they arrive. If `reset: true` is passed, the response\n  // data will be passed through the `reset` method instead of `set`.\n  fetch: function (options) {\n    options = _.extend({\n      parse: true\n    }, options);\n    var success = options.success;\n    var collection = this;\n    options.success = function (resp) {\n      var method = options.reset ? 'reset' : 'set';\n      collection[method](resp, options);\n      if (success) {\n        success.call(options.context, collection,\n          resp,\n          options);\n      }\n      collection.trigger('sync', collection, resp, options);\n    };\n    wrapError(this, options);\n    return this.sync('read', this, options);\n  },\n\n  // Create a new instance of a model in this collection. Add the model to the\n  // collection immediately, unless `wait: true` is passed, in which case we\n  // wait for the server to agree.\n  create: function (model, options) {\n    options = options ? _.clone(options) : {};\n    var wait = options.wait;\n    model = this._prepareModel(model, options);\n    if (!model) {\n      return false;\n    }\n    if (!wait) {\n      this.add(model, options);\n    }\n    var collection = this;\n    var success = options.success;\n    options.success = function (m, resp, callbackOpts) {\n      if (wait) {\n        collection.add(m, callbackOpts);\n      }\n      if (success) {\n        success.call(callbackOpts.context, m, resp,\n          callbackOpts);\n      }\n    };\n    model.save(null, options);\n    return model;\n  },\n\n  // **parse** converts a response into a list of models to be added to the\n  // collection. The default implementation is just to pass it through.\n  parse: function (resp, options) {\n    return resp;\n  },\n\n  // Create a new collection with an identical list of models as this one.\n  clone: function () {\n    return new this.constructor(this.models, {\n      model: this.model,\n      comparator: this.comparator\n    });\n  },\n\n  // Define how to uniquely identify models in the collection.\n  modelId: function (attrs) {\n    return attrs[this.model.prototype.idAttribute || 'id'];\n  },\n\n  // Private method to reset all internal state. Called when the collection\n  // is first initialized or reset.\n  _reset: function () {\n    this.length = 0;\n    this.models = [];\n    this._byId = {};\n  },\n\n  // Prepare a hash of attributes (or other model) to be added to this\n  // collection.\n  _prepareModel: function (attrs, options) {\n    if (this._isModel(attrs)) {\n      if (!attrs.collection) {\n        attrs.collection = this;\n      }\n      return attrs;\n    }\n    options = options ? _.clone(options) : {};\n    options.collection = this;\n    var model = new this.model(attrs, options);\n    if (!model.validationError) {\n      return model;\n    }\n    this.trigger('invalid', this, model.validationError, options);\n    return false;\n  },\n\n  // Internal method called by both remove and set.\n  _removeModels: function (models, options) {\n    var removed = [];\n    for (var i = 0; i < models.length; i++) {\n      var model = this.get(models[i]);\n      if (!model) {\n        continue;\n      }\n\n      var index = this.indexOf(model);\n      this.models.splice(index, 1);\n      this.length--;\n\n      // Remove references before triggering 'remove' event to prevent an\n      // infinite loop. #3693\n      delete this._byId[model.cid];\n      var id = this.modelId(model.attributes);\n      if (id != null) {\n        delete this._byId[id];\n      }\n\n      if (!options.silent) {\n        options.index = index;\n        model.trigger('remove', model, this, options);\n      }\n\n      removed.push(model);\n      this._removeReference(model, options);\n    }\n    return removed;\n  },\n\n  // Method for checking whether an object should be considered a model for\n  // the purposes of adding to the collection.\n  _isModel: function (model) {\n    return model instanceof Model;\n  },\n\n  // Internal method to create a model's ties to a collection.\n  _addReference: function (model, options) {\n    this._byId[model.cid] = model;\n    var id = this.modelId(model.attributes);\n    if (id != null) {\n      this._byId[id] = model;\n    }\n    model.on('all', this._onModelEvent, this);\n  },\n\n  // Internal method to sever a model's ties to a collection.\n  _removeReference: function (model, options) {\n    delete this._byId[model.cid];\n    var id = this.modelId(model.attributes);\n    if (id != null) {\n      delete this._byId[id];\n    }\n    if (this === model.collection) {\n      delete model.collection;\n    }\n    model.off('all', this._onModelEvent, this);\n  },\n\n  // Internal method called every time a model in the set fires an event.\n  // Sets need to update their indexes when models change ids. All other\n  // events simply proxy through. \"add\" and \"remove\" events that originate\n  // in other collections are ignored.\n  _onModelEvent: function (event, model, collection, options) {\n    if (model) {\n      if ((event === 'add' || event === 'remove') && collection !==\n        this) {\n        return;\n      }\n      if (event === 'destroy') {\n        this.remove(model, options);\n      }\n      if (event === 'change') {\n        var prevId = this.modelId(model.previousAttributes());\n        var id = this.modelId(model.attributes);\n        if (prevId !== id) {\n          if (prevId != null) {\n            delete this._byId[prevId];\n          }\n          if (id != null) {\n            this._byId[id] = model;\n          }\n        }\n      }\n    }\n    this.trigger.apply(this, arguments);\n  }\n\n});\n\n// Underscore methods that we want to implement on the Collection.\n// 90% of the core usefulness of Backbone Collections is actually implemented\n// right here:\nvar collectionMethods = {\n  forEach: 3,\n  each: 3,\n  map: 3,\n  collect: 3,\n  reduce: 0,\n  foldl: 0,\n  inject: 0,\n  reduceRight: 0,\n  foldr: 0,\n  find: 3,\n  detect: 3,\n  filter: 3,\n  select: 3,\n  reject: 3,\n  every: 3,\n  all: 3,\n  some: 3,\n  any: 3,\n  include: 3,\n  includes: 3,\n  contains: 3,\n  invoke: 0,\n  max: 3,\n  min: 3,\n  toArray: 1,\n  size: 1,\n  first: 3,\n  head: 3,\n  take: 3,\n  initial: 3,\n  rest: 3,\n  tail: 3,\n  drop: 3,\n  last: 3,\n  without: 0,\n  difference: 0,\n  indexOf: 3,\n  shuffle: 1,\n  lastIndexOf: 3,\n  isEmpty: 1,\n  chain: 1,\n  sample: 3,\n  partition: 3,\n  groupBy: 3,\n  countBy: 3,\n  sortBy: 3,\n  indexBy: 3,\n  findIndex: 3,\n  findLastIndex: 3\n};\n\n// Mix in each Underscore method as a proxy to `Collection#models`.\naddUnderscoreMethods(Collection, collectionMethods, 'models');\n\nexport {\n  Collection\n};\n","import $ from 'jquery';\nimport _ from 'underscore';\nimport {\n  Backbone\n} from './core.js';\nimport {\n  Events\n} from './events.js';\n\n// Backbone.View\n// -------------\n\n// Backbone Views are almost more convention than they are actual code. A View\n// is simply a JavaScript object that represents a logical chunk of UI in the\n// DOM. This might be a single item, an entire list, a sidebar or panel, or\n// even the surrounding frame which wraps your whole app. Defining a chunk of\n// UI as a **View** allows you to define your DOM events declaratively, without\n// having to worry about render order ... and makes it easy for the view to\n// react to specific changes in the state of your models.\n\n// Creating a Backbone.View creates its initial element outside of the DOM,\n// if an existing element is not provided...\nvar View = function (options) {\n  this.cid = _.uniqueId('view');\n  this.preinitialize.apply(this, arguments);\n  _.extend(this, _.pick(options, viewOptions));\n  this._ensureElement();\n  this.initialize.apply(this, arguments);\n};\n\n// Cached regex to split keys for `delegate`.\nvar delegateEventSplitter = /^(\\S+)\\s*(.*)$/;\n\n// List of view options to be set as properties.\nvar viewOptions = ['model', 'collection', 'el', 'id', 'attributes',\n  'className', 'tagName', 'events'\n];\n\n// Set up all inheritable **Backbone.View** properties and methods.\n_.extend(View.prototype, Events, {\n\n  // The default `tagName` of a View's element is `\"div\"`.\n  tagName: 'div',\n\n  // jQuery delegate for element lookup, scoped to DOM elements within the\n  // current view. This should be preferred to global lookups where possible.\n  $: function (selector) {\n    return this.$el.find(selector);\n  },\n\n  // preinitialize is an empty function by default. You can override it with a function\n  // or object.  preinitialize will run before any instantiation logic is run in the View\n  preinitialize: function () {},\n\n  // Initialize is an empty function by default. Override it with your own\n  // initialization logic.\n  initialize: function () {},\n\n  // **render** is the core function that your view should override, in order\n  // to populate its element (`this.el`), with the appropriate HTML. The\n  // convention is for **render** to always return `this`.\n  render: function () {\n    return this;\n  },\n\n  // Remove this view by taking the element out of the DOM, and removing any\n  // applicable Backbone.Events listeners.\n  remove: function () {\n    this._removeElement();\n    this.stopListening();\n    return this;\n  },\n\n  // Remove this view's element from the document and all event listeners\n  // attached to it. Exposed for subclasses using an alternative DOM\n  // manipulation API.\n  _removeElement: function () {\n    this.$el.remove();\n  },\n\n  // Change the view's element (`this.el` property) and re-delegate the\n  // view's events on the new element.\n  setElement: function (element) {\n    this.undelegateEvents();\n    this._setElement(element);\n    this.delegateEvents();\n    return this;\n  },\n\n  // Creates the `this.el` and `this.$el` references for this view using the\n  // given `el`. `el` can be a CSS selector or an HTML string, a jQuery\n  // context or an element. Subclasses can override this to utilize an\n  // alternative DOM manipulation API and are only required to set the\n  // `this.el` property.\n  _setElement: function (el) {\n    this.$el = el instanceof Backbone.$ ? el : Backbone.$(el);\n    this.el = this.$el[0];\n  },\n\n  // Set callbacks, where `this.events` is a hash of\n  //\n  // *{\"event selector\": \"callback\"}*\n  //\n  //     {\n  //       'mousedown .title':  'edit',\n  //       'click .button':     'save',\n  //       'click .open':       function(e) { ... }\n  //     }\n  //\n  // pairs. Callbacks will be bound to the view, with `this` set properly.\n  // Uses event delegation for efficiency.\n  // Omitting the selector binds the event to `this.el`.\n  delegateEvents: function (events) {\n    events || (events = _.result(this, 'events'));\n    if (!events) {\n      return this;\n    }\n    this.undelegateEvents();\n    for (var key in events) {\n      var method = events[key];\n      if (!_.isFunction(method)) method = this[method];\n      if (!method) {\n        continue;\n      }\n      var match = key.match(delegateEventSplitter);\n      this.delegate(match[1], match[2], _.bind(method, this));\n    }\n    return this;\n  },\n\n  // Add a single event listener to the view's element (or a child element\n  // using `selector`). This only works for delegate-able events: not `focus`,\n  // `blur`, and not `change`, `submit`, and `reset` in Internet Explorer.\n  delegate: function (eventName, selector, listener) {\n    this.$el.on(eventName + '.delegateEvents' + this.cid, selector,\n      listener);\n    return this;\n  },\n\n  // Clears all callbacks previously bound to the view by `delegateEvents`.\n  // You usually don't need to use this, but may wish to if you have multiple\n  // Backbone views attached to the same DOM element.\n  undelegateEvents: function () {\n    if (this.$el) {\n      this.$el.off('.delegateEvents' + this.cid);\n    }\n    return this;\n  },\n\n  // A finer-grained `undelegateEvents` for removing a single delegated event.\n  // `selector` and `listener` are both optional.\n  undelegate: function (eventName, selector, listener) {\n    this.$el.off(eventName + '.delegateEvents' + this.cid,\n      selector,\n      listener);\n    return this;\n  },\n\n  // Produces a DOM element to be assigned to your view. Exposed for\n  // subclasses using an alternative DOM manipulation API.\n  _createElement: function (tagName) {\n    return document.createElement(tagName);\n  },\n\n  // Ensure that the View has a DOM element to render into.\n  // If `this.el` is a string, pass it through `$()`, take the first\n  // matching element, and re-assign it to `el`. Otherwise, create\n  // an element from the `id`, `className` and `tagName` properties.\n  _ensureElement: function () {\n    if (!this.el) {\n      var attrs = _.extend({}, _.result(this, 'attributes'));\n      if (this.id) {\n        attrs.id = _.result(this, 'id');\n      }\n      if (this.className) {\n        attrs['class'] = _.result(this,\n          'className');\n      }\n      this.setElement(this._createElement(_.result(this,\n        'tagName')));\n      this._setAttributes(attrs);\n    } else {\n      this.setElement(_.result(this, 'el'));\n    }\n  },\n\n  // Set attributes from a hash on this view's element.  Exposed for\n  // subclasses using an alternative DOM manipulation API.\n  _setAttributes: function (attributes) {\n    this.$el.attr(attributes);\n  }\n\n});\n\nexport {\n  View\n};\n","import $ from 'jquery';\nimport _ from 'underscore';\nimport {\n  Backbone\n} from './core.js';\nimport {\n  Events\n} from './events.js';\n\n// Backbone.Router\n// ---------------\n\n// Routers map faux-URLs to actions, and fire events when routes are\n// matched. Creating a new one sets its `routes` hash, if not set statically.\nvar Router = function (options) {\n  options = options || {};\n  this.preinitialize.apply(this, arguments);\n  if (options.routes) {\n    this.routes = options.routes;\n  }\n  this._bindRoutes();\n  this.initialize.apply(this, arguments);\n};\n\n// Cached regular expressions for matching named param parts and splatted\n// parts of route strings.\nvar optionalParam = /\\((.*?)\\)/g;\nvar namedParam = /(\\(\\?)?:\\w+/g;\nvar splatParam = /\\*\\w+/g;\nvar escapeRegExp = /[\\-{}\\[\\]+?.,\\\\\\^$|#\\s]/g;\n\n// Set up all inheritable **Backbone.Router** properties and methods.\n_.extend(Router.prototype, Events, {\n\n  // preinitialize is an empty function by default. You can override it with a function\n  // or object.  preinitialize will run before any instantiation logic is run in the Router.\n  preinitialize: function () {},\n\n  // Initialize is an empty function by default. Override it with your own\n  // initialization logic.\n  initialize: function () {},\n\n  // Manually bind a single named route to a callback. For example:\n  //\n  //     this.route('search/:query/p:num', 'search', function(query, num) {\n  //       ...\n  //     });\n  //\n  route: function (route, name, callback) {\n    if (!_.isRegExp(route)) {\n      route = this._routeToRegExp(route);\n    }\n    if (_.isFunction(name)) {\n      callback = name;\n      name = '';\n    }\n    if (!callback) {\n      callback = this[name];\n    }\n    var router = this;\n    Backbone.history.route(route, function (fragment) {\n      var args = router._extractParameters(route, fragment);\n      if (router.execute(callback, args, name) !== false) {\n        router.trigger.apply(router, ['route:' + name].concat(\n          args));\n        router.trigger('route', name, args);\n        Backbone.history.trigger('route', router, name, args);\n      }\n    });\n    return this;\n  },\n\n  // Execute a route handler with the provided parameters.  This is an\n  // excellent place to do pre-route setup or post-route cleanup.\n  execute: function (callback, args, name) {\n    if (callback) {\n      callback.apply(this, args);\n    }\n  },\n\n  // Simple proxy to `Backbone.history` to save a fragment into the history.\n  navigate: function (fragment, options) {\n    Backbone.history.navigate(fragment, options);\n    return this;\n  },\n\n  // Bind all defined routes to `Backbone.history`. We have to reverse the\n  // order of the routes here to support behavior where the most general\n  // routes can be defined at the bottom of the route map.\n  _bindRoutes: function () {\n    if (!this.routes) return;\n    this.routes = _.result(this, 'routes');\n    var route, routes = _.keys(this.routes);\n    while ((route = routes.pop()) != null) {\n      this.route(route, this.routes[route]);\n    }\n  },\n\n  // Convert a route string into a regular expression, suitable for matching\n  // against the current location hash.\n  _routeToRegExp: function (route) {\n    route = route.replace(escapeRegExp, '\\\\$&')\n      .replace(optionalParam, '(?:$1)?')\n      .replace(namedParam, function (match, optional) {\n        return optional ? match : '([^/?]+)';\n      })\n      .replace(splatParam, '([^?]*?)');\n    return new RegExp('^' + route + '(?:\\\\?([\\\\s\\\\S]*))?$');\n  },\n\n  // Given a route, and a URL fragment that it matches, return the array of\n  // extracted decoded parameters. Empty or unmatched parameters will be\n  // treated as `null` to normalize cross-browser behavior.\n  _extractParameters: function (route, fragment) {\n    var params = route.exec(fragment).slice(1);\n    return _.map(params, function (param, i) {\n      // Don't decode the search params.\n      if (i === params.length - 1) {\n        return param || null;\n      }\n      return param ? decodeURIComponent(param) : null;\n    });\n  }\n\n});\n\nexport {\n  Router\n};\n","import $ from 'jquery';\nimport _ from 'underscore';\nimport {\n  Backbone\n} from './core.js';\nimport {\n  Events\n} from './events.js';\n\n// Backbone.History\n// ----------------\n\n// Handles cross-browser history management, based on either\n// [pushState](http://diveintohtml5.info/history.html) and real URLs, or\n// [onhashchange](https://developer.mozilla.org/en-US/docs/DOM/window.onhashchange)\n// and URL fragments. If the browser supports neither (old IE, natch),\n// falls back to polling.\nvar History = function () {\n  this.handlers = [];\n  this.checkUrl = _.bind(this.checkUrl, this);\n\n  // Ensure that `History` can be used outside of the browser.\n  if (typeof window !== 'undefined') {\n    this.location = window.location;\n    this.history = window.history;\n  }\n};\n\n// Cached regex for stripping a leading hash/slash and trailing space.\nvar routeStripper = /^[#\\/]|\\s+$/g;\n\n// Cached regex for stripping leading and trailing slashes.\nvar rootStripper = /^\\/+|\\/+$/g;\n\n// Cached regex for stripping urls of hash.\nvar pathStripper = /#.*$/;\n\n// Has the history handling already been started?\nHistory.started = false;\n\n// Set up all inheritable **Backbone.History** properties and methods.\n_.extend(History.prototype, Events, {\n\n  // The default interval to poll for hash changes, if necessary, is\n  // twenty times a second.\n  interval: 50,\n\n  // Are we at the app root?\n  atRoot: function () {\n    var path = this.location.pathname.replace(/[^\\/]$/, '$&/');\n    return path === this.root && !this.getSearch();\n  },\n\n  // Does the pathname match the root?\n  matchRoot: function () {\n    var path = this.decodeFragment(this.location.pathname);\n    var rootPath = path.slice(0, this.root.length - 1) + '/';\n    return rootPath === this.root;\n  },\n\n  // Unicode characters in `location.pathname` are percent encoded so they're\n  // decoded for comparison. `%25` should not be decoded since it may be part\n  // of an encoded parameter.\n  decodeFragment: function (fragment) {\n    return decodeURI(fragment.replace(/%25/g, '%2525'));\n  },\n\n  // In IE6, the hash fragment and search params are incorrect if the\n  // fragment contains `?`.\n  getSearch: function () {\n    var match = this.location.href.replace(/#.*/, '').match(\n      /\\?.+/);\n    return match ? match[0] : '';\n  },\n\n  // Gets the true hash value. Cannot use location.hash directly due to bug\n  // in Firefox where location.hash will always be decoded.\n  getHash: function (window) {\n    var match = (window || this).location.href.match(/#(.*)$/);\n    return match ? match[1] : '';\n  },\n\n  // Get the pathname and search params, without the root.\n  getPath: function () {\n    var path = this.decodeFragment(\n      this.location.pathname + this.getSearch()\n    ).slice(this.root.length - 1);\n    return path.charAt(0) === '/' ? path.slice(1) : path;\n  },\n\n  // Get the cross-browser normalized URL fragment from the path or hash.\n  getFragment: function (fragment) {\n    if (fragment == null) {\n      if (this._usePushState || !this._wantsHashChange) {\n        fragment = this.getPath();\n      } else {\n        fragment = this.getHash();\n      }\n    }\n    return fragment.replace(routeStripper, '');\n  },\n\n  // Start the hash change handling, returning `true` if the current URL matches\n  // an existing route, and `false` otherwise.\n  start: function (options) {\n    if (History.started) {\n      throw new Error('Backbone.history has already been started');\n    }\n    History.started = true;\n\n    // Figure out the initial configuration. Do we need an iframe?\n    // Is pushState desired ... is it available?\n    this.options = _.extend({\n      root: '/'\n    }, this.options, options);\n    this.root = this.options.root;\n    this._wantsHashChange = this.options.hashChange !== false;\n    this._hasHashChange = 'onhashchange' in window && (document.documentMode ===\n      void 0 || document.documentMode > 7);\n    this._useHashChange = this._wantsHashChange && this._hasHashChange;\n    this._wantsPushState = !!this.options.pushState;\n    this._hasPushState = !!(this.history && this.history.pushState);\n    this._usePushState = this._wantsPushState && this._hasPushState;\n    this.fragment = this.getFragment();\n\n    // Normalize root to always include a leading and trailing slash.\n    this.root = ('/' + this.root + '/').replace(rootStripper,\n      '/');\n\n    // Transition from hashChange to pushState or vice versa if both are\n    // requested.\n    if (this._wantsHashChange && this._wantsPushState) {\n\n      // If we've started off with a route from a `pushState`-enabled\n      // browser, but we're currently in a browser that doesn't support it...\n      if (!this._hasPushState && !this.atRoot()) {\n        var rootPath = this.root.slice(0, -1) || '/';\n        this.location.replace(rootPath + '#' + this.getPath());\n        // Return immediately as browser will do redirect to new url\n        return true;\n\n        // Or if we've started out with a hash-based route, but we're currently\n        // in a browser where it could be `pushState`-based instead...\n      } else if (this._hasPushState && this.atRoot()) {\n        this.navigate(this.getHash(), {\n          replace: true\n        });\n      }\n\n    }\n\n    // Proxy an iframe to handle location events if the browser doesn't\n    // support the `hashchange` event, HTML5 history, or the user wants\n    // `hashChange` but not `pushState`.\n    if (!this._hasHashChange && this._wantsHashChange && !this._usePushState) {\n      this.iframe = document.createElement('iframe');\n      this.iframe.src = 'javascript:0';\n      this.iframe.style.display = 'none';\n      this.iframe.tabIndex = -1;\n      var body = document.body;\n      // Using `appendChild` will throw on IE < 9 if the document is not ready.\n      var iWindow = body.insertBefore(this.iframe, body.firstChild)\n        .contentWindow;\n      iWindow.document.open();\n      iWindow.document.close();\n      iWindow.location.hash = '#' + this.fragment;\n    }\n\n    // Add a cross-platform `addEventListener` shim for older browsers.\n    var addEventListener = window.addEventListener || function (\n      eventName,\n      listener) {\n      return attachEvent('on' + eventName, listener);\n    };\n\n    // Depending on whether we're using pushState or hashes, and whether\n    // 'onhashchange' is supported, determine how we check the URL state.\n    if (this._usePushState) {\n      addEventListener('popstate', this.checkUrl, false);\n    } else if (this._useHashChange && !this.iframe) {\n      addEventListener('hashchange', this.checkUrl, false);\n    } else if (this._wantsHashChange) {\n      this._checkUrlInterval = setInterval(this.checkUrl, this.interval);\n    }\n\n    if (!this.options.silent) {\n      return this.loadUrl();\n    }\n  },\n\n  // Disable Backbone.history, perhaps temporarily. Not useful in a real app,\n  // but possibly useful for unit testing Routers.\n  stop: function () {\n    // Add a cross-platform `removeEventListener` shim for older browsers.\n    var removeEventListener = window.removeEventListener ||\n      function (\n        eventName, listener) {\n        return detachEvent('on' + eventName, listener);\n      };\n\n    // Remove window listeners.\n    if (this._usePushState) {\n      removeEventListener('popstate', this.checkUrl, false);\n    } else if (this._useHashChange && !this.iframe) {\n      removeEventListener('hashchange', this.checkUrl, false);\n    }\n\n    // Clean up the iframe if necessary.\n    if (this.iframe) {\n      document.body.removeChild(this.iframe);\n      this.iframe = null;\n    }\n\n    // Some environments will throw when clearing an undefined interval.\n    if (this._checkUrlInterval) {\n      clearInterval(this._checkUrlInterval);\n    }\n    History.started = false;\n  },\n\n  // Add a route to be tested when the fragment changes. Routes added later\n  // may override previous routes.\n  route: function (route, callback) {\n    this.handlers.unshift({\n      route: route,\n      callback: callback\n    });\n  },\n\n  // Checks the current URL to see if it has changed, and if it has,\n  // calls `loadUrl`, normalizing across the hidden iframe.\n  checkUrl: function (e) {\n    var current = this.getFragment();\n\n    // If the user pressed the back button, the iframe's hash will have\n    // changed and we should use that for comparison.\n    if (current === this.fragment && this.iframe) {\n      current = this.getHash(this.iframe.contentWindow);\n    }\n\n    if (current === this.fragment) {\n      return false;\n    }\n    if (this.iframe) {\n      this.navigate(current);\n    }\n    this.loadUrl();\n  },\n\n  // Attempt to load the current URL fragment. If a route succeeds with a\n  // match, returns `true`. If no defined routes matches the fragment,\n  // returns `false`.\n  loadUrl: function (fragment) {\n    // If the root doesn't match, no routes can match either.\n    if (!this.matchRoot()) return false;\n    fragment = this.fragment = this.getFragment(fragment);\n    return _.some(this.handlers, function (handler) {\n      if (handler.route.test(fragment)) {\n        handler.callback(fragment);\n        return true;\n      }\n    });\n  },\n\n  // Save a fragment into the hash history, or replace the URL state if the\n  // 'replace' option is passed. You are responsible for properly URL-encoding\n  // the fragment in advance.\n  //\n  // The options object can contain `trigger: true` if you wish to have the\n  // route callback be fired (not usually desirable), or `replace: true`, if\n  // you wish to modify the current URL without adding an entry to the history.\n  navigate: function (fragment, options) {\n    if (!History.started) {\n      return false;\n    }\n    if (!options || options === true) {\n      options = {\n        trigger: !!options\n      };\n    }\n\n    // Normalize the fragment.\n    fragment = this.getFragment(fragment || '');\n\n    // Don't include a trailing slash on the root.\n    var rootPath = this.root;\n    if (fragment === '' || fragment.charAt(0) === '?') {\n      rootPath = rootPath.slice(0, -1) || '/';\n    }\n    var url = rootPath + fragment;\n\n    // Strip the fragment of the query and hash for matching.\n    fragment = fragment.replace(pathStripper, '');\n\n    // Decode for matching.\n    var decodedFragment = this.decodeFragment(fragment);\n\n    if (this.fragment === decodedFragment) {\n      return;\n    }\n    this.fragment = decodedFragment;\n\n    // If pushState is available, we use it to set the fragment as a real URL.\n    if (this._usePushState) {\n      this.history[options.replace ? 'replaceState' : 'pushState']\n        ({},\n          document.title, url);\n\n      // If hash changes haven't been explicitly disabled, update the hash\n      // fragment to store history.\n    } else if (this._wantsHashChange) {\n      this._updateHash(this.location, fragment, options.replace);\n      if (this.iframe && fragment !== this.getHash(this.iframe.contentWindow)) {\n        var iWindow = this.iframe.contentWindow;\n\n        // Opening and closing the iframe tricks IE7 and earlier to push a\n        // history entry on hash-tag change.  When replace is true, we don't\n        // want this.\n        if (!options.replace) {\n          iWindow.document.open();\n          iWindow.document.close();\n        }\n\n        this._updateHash(iWindow.location, fragment, options.replace);\n      }\n\n      // If you've told us that you explicitly don't want fallback hashchange-\n      // based history, then `navigate` becomes a page refresh.\n    } else {\n      return this.location.assign(url);\n    }\n    if (options.trigger) {\n      return this.loadUrl(fragment);\n    }\n  },\n\n  // Update the hash location, either replacing the current entry, or adding\n  // a new one to the browser history.\n  _updateHash: function (location, fragment, replace) {\n    if (replace) {\n      var href = location.href.replace(/(javascript:|#).*$/, '');\n      location.replace(href + '#' + fragment);\n    } else {\n      // Some browsers require that `hash` contains a leading #.\n      location.hash = '#' + fragment;\n    }\n  }\n\n});\n\nexport {\n  History\n};\n","//     Backbone.js 1.3.3\n\n//     (c) 2010-2016 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n//     Backbone may be freely distributed under the MIT license.\n//     For all details and documentation:\n//     http://backbonejs.org\nimport $ from 'jquery';\nimport _ from 'underscore';\nimport {\n  Backbone\n} from './backbone_modules/core.js';\nimport {\n  Events\n} from './backbone_modules/events.js';\nimport {\n  Model\n} from './backbone_modules/model.js';\nimport {\n  Collection\n} from './backbone_modules/collection.js';\nimport {\n  View\n} from './backbone_modules/view.js';\nimport {\n  Router\n} from './backbone_modules/router.js';\nimport {\n  History\n} from './backbone_modules/history.js';\n\n// Allow the `Backbone` object to serve as a global event bus, for folks who\n// want global \"pubsub\" in a convenient place.\n_.extend(Backbone, Events);\n\n// Helpers\n// -------\n\n// Helper function to correctly set up the prototype chain for subclasses.\n// Similar to `goog.inherits`, but uses a hash of prototype properties and\n// class properties to be extended.\nvar extend = function (protoProps, staticProps) {\n  var parent = this;\n  var child;\n\n  // The constructor function for the new subclass is either defined by you\n  // (the \"constructor\" property in your `extend` definition), or defaulted\n  // by us to simply call the parent constructor.\n  if (protoProps && _.has(protoProps, 'constructor')) {\n    child = protoProps.constructor;\n  } else {\n    child = function () {\n      return parent.apply(this, arguments);\n    };\n  }\n\n  // Add static properties to the constructor function, if supplied.\n  _.extend(child, parent, staticProps);\n\n  // Set the prototype chain to inherit from `parent`, without calling\n  // `parent`'s constructor function and add the prototype properties.\n  child.prototype = _.create(parent.prototype, protoProps);\n  child.prototype.constructor = child;\n\n  // Set a convenience property in case the parent's prototype is needed\n  // later.\n  child.__super__ = parent.prototype;\n\n  return child;\n};\n\n// Set up inheritance for the model, collection, router, view and history.\nModel.extend = Collection.extend = Router.extend = View.extend = History.extend = extend;\n\nBackbone.Model = Model;\n\nBackbone.Collection = Collection;\n\nBackbone.View = View;\n\nBackbone.Router = Router;\n\nBackbone.History = History;\n\n// Create the default Backbone.history.\nBackbone.history = new History;\nvar history = Backbone.history;\n\nvar VERSION = Backbone.VERSION;\nvar noConflict = Backbone.noConflict;\nvar emulateHTTP = Backbone.emulateHTTP;\nvar emulateJSON = Backbone.emulateJSON;\nvar sync = Backbone.sync;\nvar ajax = Backbone.ajax;\nvar on = Backbone.on;\nvar listenTo = Backbone.listenTo;\nvar off = Backbone.off;\nvar stopListening = Backbone.stopListening;\nvar once = Backbone.once;\nvar listenToOnce = Backbone.listenToOnce;\nvar trigger = Backbone.trigger;\nvar bind = Backbone.bind;\nvar unbind = Backbone.unbind;\n\nexport {\n  Backbone,\n  VERSION,\n  $,\n  noConflict,\n  emulateHTTP,\n  emulateJSON,\n  sync,\n  ajax,\n  Events,\n  on,\n  listenTo,\n  off,\n  stopListening,\n  once,\n  listenToOnce,\n  trigger,\n  bind,\n  unbind,\n  Model,\n  Collection,\n  View,\n  Router,\n  History,\n  history\n}\n\nexport default Backbone;\n"],"names":["root","self","global","previousBackbone","Backbone","slice","Array","prototype","VERSION","$","noConflict","this","modelMatcher","attrs","matcher","_","matches","model","attributes","urlError","Error","wrapError","options","error","resp","call","context","trigger","cb","iteratee","instance","isFunction","isObject","_isModel","isString","get","addMethod","length","method","attribute","value","defaultVal","args","arguments","unshift","apply","addUnderscoreMethods","Class","methods","each","emulateHTTP","emulateJSON","methodMap","create","update","patch","delete","read","sync","type","defaults","params","dataType","url","result","data","contentType","JSON","stringify","toJSON","_method","beforeSend","xhr","setRequestHeader","processData","textStatus","errorThrown","ajax","extend","Events","eventSplitter","eventsApi","events","name","callback","opts","names","i","keys","test","split","onApi","handlers","ctx","listening","count","push","offApi","listeners","remaining","j","handler","_callback","id","listeningTo","objId","ids","internalOn","obj","_events","_listeners","onceMap","map","offer","once","triggerApi","objEvents","allEvents","all","triggerEvents","concat","ev","l","a1","a2","a3","on","listenTo","_listenId","uniqueId","_listeningTo","thisId","off","stopListening","bind","listenToOnce","Math","max","unbind","Model","preinitialize","cid","cidPrefix","collection","parse","set","changed","initialize","validationError","idAttribute","clone","attr","escape","has","key","val","_validate","unset","silent","changes","changing","_changing","_previousAttributes","current","prev","isEqual","_pending","clear","hasChanged","isEmpty","changedAttributes","diff","old","previous","previousAttributes","fetch","success","serverAttrs","save","wait","validate","isNew","destroy","defer","base","replace","encodeURIComponent","constructor","isValid","values","pairs","invert","pick","omit","chain","Collection","models","comparator","_reset","reset","setOptions","add","remove","merge","addOptions","splice","array","insert","at","min","tail","singular","isArray","removed","_removeModels","added","merged","toAdd","toMerge","toRemove","modelMap","sort","sortable","sortAttr","existing","_prepareModel","_addReference","orderChanged","some","m","index","_removeReference","previousModels","pop","shift","_byId","modelId","where","first","findWhere","sortBy","pluck","callbackOpts","indexOf","_onModelEvent","event","prevId","forEach","collect","reduce","foldl","inject","reduceRight","foldr","find","detect","filter","select","reject","every","any","include","includes","contains","invoke","toArray","size","head","take","initial","rest","drop","last","without","difference","shuffle","lastIndexOf","sample","partition","groupBy","countBy","indexBy","findIndex","findLastIndex","View","viewOptions","_ensureElement","delegateEventSplitter","tagName","selector","$el","render","_removeElement","setElement","element","undelegateEvents","_setElement","delegateEvents","el","match","delegate","eventName","listener","undelegate","_createElement","document","createElement","className","_setAttributes","Router","routes","_bindRoutes","optionalParam","namedParam","splatParam","escapeRegExp","route","isRegExp","_routeToRegExp","router","history","fragment","_extractParameters","execute","navigate","optional","RegExp","exec","param","decodeURIComponent","History","checkUrl","window","location","routeStripper","rootStripper","pathStripper","started","interval","atRoot","pathname","getSearch","matchRoot","decodeFragment","decodeURI","href","getHash","getPath","path","charAt","getFragment","_usePushState","_wantsHashChange","start","hashChange","_hasHashChange","documentMode","_useHashChange","_wantsPushState","pushState","_hasPushState","rootPath","iframe","src","style","display","tabIndex","body","iWindow","insertBefore","firstChild","contentWindow","open","close","hash","addEventListener","attachEvent","_checkUrlInterval","setInterval","loadUrl","stop","removeEventListener","detachEvent","removeChild","clearInterval","e","decodedFragment","title","assign","_updateHash","protoProps","staticProps","child","parent","__super__"],"mappings":"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"}